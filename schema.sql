-- Criação da tabela de Clientes
CREATE TABLE public.clients (
  id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  name TEXT NOT NULL,
  phone TEXT,
  email TEXT,
  created_at TIMESTAMPTZ DEFAULT now()
);

-- Criação da tabela de Vendas
-- Cada linha representa um item vendido, para manter a estrutura similar à do código existente.
CREATE TABLE public.sales (
  id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  client_id BIGINT REFERENCES public.clients(id) ON DELETE SET NULL,
  item TEXT NOT NULL,
  type TEXT NOT NULL, -- pode ser 'procedimento', 'pacote', 'produto'
  price NUMERIC NOT NULL,
  date TEXT NOT NULL,
  status TEXT NOT NULL, -- pode ser 'pago', 'pendente'
  sessions INT,
  used_sessions INT,
  created_at TIMESTAMPTZ DEFAULT now()
);

-- Criação da tabela de Agendamentos
CREATE TABLE public.appointments (
  id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  client_id BIGINT REFERENCES public.clients(id) ON DELETE SET NULL,
  service TEXT NOT NULL,
  time TEXT NOT NULL,
  date TEXT NOT NULL,
  status TEXT NOT NULL, -- pode ser 'confirmado', 'pendente'
  price NUMERIC NOT NULL,
  type TEXT NOT NULL,
  created_at TIMESTAMPTZ DEFAULT now()
);

-- Habilitar Row Level Security (RLS) para as tabelas
ALTER TABLE public.clients ENABLE ROW LEVEL SECURITY;
ALTER TABLE public.sales ENABLE ROW LEVEL SECURITY;
ALTER TABLE public.appointments ENABLE ROW LEVEL SECURITY;

-- Políticas de acesso
-- Permitir que usuários autenticados leiam todos os dados
CREATE POLICY "Allow authenticated read access" ON public.clients FOR SELECT USING (auth.role() = 'authenticated');
CREATE POLICY "Allow authenticated read access" ON public.sales FOR SELECT USING (auth.role() = 'authenticated');
CREATE POLICY "Allow authenticated read access" ON public.appointments FOR SELECT USING (auth.role() = 'authenticated');

-- Permitir que usuários autenticados insiram, atualizem e deletem dados
CREATE POLICY "Allow authenticated full access" ON public.clients FOR ALL USING (auth.role() = 'authenticated');
CREATE POLICY "Allow authenticated full access" ON public.sales FOR ALL USING (auth.role() = 'authenticated');
CREATE POLICY "Allow authenticated full access" ON public.appointments FOR ALL USING (auth.role() = 'authenticated');
